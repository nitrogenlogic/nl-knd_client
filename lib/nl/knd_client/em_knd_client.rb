module NL
  module KndClient
    class EMKndClient
      @@logger = ->(msg) { puts "#{Time.now.iso8601(6)} - #{msg}" }
      @@bencher = nil

      # Sets a block to be called for any log messages generated by EMKndClient
      # and related classes.  The default is to print messages to STDOUT with a
      # timestamp.
      def self.on_log(&block)
        @@logger = block
      end

      # Logs a message to STDOUT, or to the logging function specified by
      # .on_log.
      #
      # The KNC project this code was extracted from was written without
      # awareness of the Ruby Logger class.
      def self.log(msg)
        @@logger.call(msg) if @@logger
      end

      # Calls the given +block+ for certain named sections of code.  The
      # benchmark block must accept a name parameter and a proc parameter, and
      # call the proc.  Disables EMKndClient benchmarking if no block is given.
      # This is used by KNC to instrument
      def self.on_bench(&block)
        @@bencher = block
      end

      # Some EMKndClient functions call this method to wrap named sections of
      # code with optional instrumentation.  Use the .on_bench method to enable
      # benchmarking/instrumentation.
      def self.bench(name, &block)
        if @@bencher
          @@bencher.call(block)
        else
          yield
        end
      end
    end
  end
end
